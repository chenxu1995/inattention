# calculate sweat factor
total =total %>% group_by(method,listener,type)  %>%
mutate(sf=case_when((method =='SIAM'| method =='APTA'| method =='MLP'|method =='QUEST+'|method=='UML') ~ 1/(var(threshold, na.rm=TRUE)*N*1.5),
(method =='SIUD'| method =='GRaBr') ~ 1/(var(threshold, na.rm=TRUE)*N*2.5)))
# calculate normalized efficiency
total=total %>% group_by(method,listener,type)  %>%
mutate(ne=sf*(1-sum(is.na(threshold))/1000))
# calculate ne summary
ne_summary <-total %>%
group_by(method,listener,type) %>%
summarise(
sd = sd(ne),
ne = mean(ne)
)
# reorder and rename NC, FC, and MC
ne_summary$method <-factor(ne_summary$method, levels =  levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# calculate ne summary
ne_summary <-total %>%
group_by(method,listener,type) %>%
summarise(
sd = sd(ne),
ne = mean(ne)
)
# reorder and rename NC, FC, and MC
ne_summary$method <-factor(ne_summary$method, levels =  levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# reorder and rename NC, FC, and MC
ne_summary$method <-factor(ne_summary$method, levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# plot barplot of normalized efficiency
bp<-ggplot(data = ne_summary, aes(x = method, y=ne, color=listener,linetype = type)) +geom_bar(stat="identity",fill="white", position=position_dodge(),lwd=1)+scale_color_jco()
bp<-bp+geom_errorbar(aes(ymin=ne, ymax=ne+sd), width=.5,
position=position_dodge(0.9),lwd=1) + theme(text = element_text(size = 16))+ labs(y = "Normalised Efficiency")
bp<-bp+theme_classic() +theme(legend.position="bottom") + theme(text = element_text(size = 16))+scale_linetype_discrete(name = "type",labels= c("Long-term inattentive", "Short-term inattentive"))
bp<- bp+theme(legend.position = "bottom",
legend.box = "vertical")
bp
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
ne ~ method,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="NC")%>%add_xy_position(x = "method")
# Adjust bar
stat.test$xmin<-stat.test$xmin+0.05
stat.test$xmax<-stat.test$xmax+0.05
bp + stat_pvalue_manual(stat.test, y.position=0.04,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
ne ~ method,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust bar
stat.test$xmin<-stat.test$xmin+0.05
stat.test$xmax<-stat.test$xmax+0.05
bp + stat_pvalue_manual(stat.test, y.position=0.04,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.02,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.025,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.035,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.015,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.005,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
ne ~ method,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust bar
stat.test$xmin<-stat.test$xmin+0.15
stat.test$xmax<-stat.test$xmax+0.15
bp + stat_pvalue_manual(stat.test, y.position=0.005,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
ne ~ method,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust bar
stat.test$xmin<-stat.test$xmin+0.2
stat.test$xmax<-stat.test$xmax+0.2
bp + stat_pvalue_manual(stat.test, y.position=0.005,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
ne ~ method,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust bar
stat.test$xmin<-stat.test$xmin+0.3
stat.test$xmax<-stat.test$xmax+0.3
bp + stat_pvalue_manual(stat.test, y.position=0.005,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
ne ~ method,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust bar
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
bp + stat_pvalue_manual(stat.test, y.position=0.005,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.35,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.25,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.05,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
bp + stat_pvalue_manual(stat.test, y.position=0.035,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =1, y = 0.05,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# add statistical label
bp<-bp+ stat_pvalue_manual(stat.test, y.position=0.035,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =1, y = 0.05,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =1, y = 0.06,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =1, y = 0.08,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =1, y = 0.08,
label = c('Number of trials = 50\nNumber of simulations = 1000\n'),hjust = 0,size=4)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =7, y = 0.04,
label = c('Number of trials = 50\nNumber of simulations = 1000\n'),hjust = 0,size=4)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =6, y = 0.04,
label = c('Number of trials = 50\nNumber of simulations = 1000\n'),hjust = 0,size=4)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =5, y = 0.04,
label = c('Number of trials = 50\nNumber of simulations = 1000\n'),hjust = 0,size=4)
# load library
library(ggplot2)
library(ggsci)
library(ggpubr)
library(dplyr)
library(rstatix)
library(ggsignif)
library(readxl)
# read data
apta <- read.delim("../data/ep7/apta.csv", header=TRUE, sep=",")
siam <-read.delim("../data/ep7/siam.csv", header=TRUE, sep=",")
siud <- read.delim("../data/ep7/siud.csv", header=TRUE, sep=",")
grabr <- read.delim("../data/ep7/GRaBr.csv", header=TRUE, sep=",")
mlp <- read.delim("../data/ep7/mlp.csv", header=TRUE, sep=",")
uml<-read.delim("../data/ep7/uml.csv", header=TRUE, sep=",")
quest <- read_excel("../data/ep7/quest.xlsx")
# merge data set and remove NA
total <- rbind( apta,grabr,mlp,quest,siam,siud,uml)
total<- na.omit(total)
# set method to factor
total$method <-factor(total$method, levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# set method to factor
total$method <-factor(total$method, levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# Modify the names of NC, FC, and MC
total$listener[total$listener == "NC"] <- "Non Concentrated"
total$listener[total$listener == "FC"] <- "Fully Concentrated"
total$listener[total$listener == "MC"] <- "Moderately Concentrated"
# Plot
bxp <- ggboxplot(
total , x = "method", y = "threshold",palette = "jco",
color = "listener",linetype="type",outlier.shape = NA,lwd=1
)+theme_classic()+ theme(text = element_text(size = 16))
bxp<-bxp+labs(y= "Threshold Estimates / dB")+ theme(legend.position="bottom")+ geom_hline(yintercept=15, linetype="longdash", color ='#e73550',lwd=1)
bxp<- bxp+scale_linetype_discrete(name = "type",labels= c("Long-term inattentive", "Short-term inattentive"))
bxp
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
threshold ~ method,  pool.sd = FALSE,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust x position
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
# Add statistical labels
bxp <-bxp + stat_pvalue_manual(stat.test, hide.ns = TRUE,y.position=25,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.01,tip.length = 0)+ theme(legend.position = "bottom",legend.box = "vertical")+ylim(10,70)
# Annotate number of simulation and number of trial
bxp <-bxp+ annotate("text",x =1, y = 55,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# disable xlab
bxp<-bxp+theme(axis.title.x=element_blank(),axis.ticks.x=element_blank())
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
threshold ~ method,  pool.sd = FALSE,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust x position
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
# Add statistical labels
bxp <-bxp + stat_pvalue_manual(stat.test, hide.ns = TRUE,y.position=25,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.01,tip.length = 0)+ theme(legend.position = "bottom",legend.box = "vertical")+ylim(10,70)
# Annotate number of simulation and number of trial
bxp <-bxp+ annotate("text",x =1, y = 55,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# disable xlab
bxp<-bxp+theme(axis.title.x=element_blank(),axis.ticks.x=element_blank())
bxp
# load library
library(ggplot2)
library(ggsci)
library(ggpubr)
library(dplyr)
library(rstatix)
library(ggsignif)
library(readxl)
# read data
apta <- read.delim("../data/ep7/apta.csv", header=TRUE, sep=",")
siam <-read.delim("../data/ep7/siam.csv", header=TRUE, sep=",")
siud <- read.delim("../data/ep7/siud.csv", header=TRUE, sep=",")
grabr <- read.delim("../data/ep7/GRaBr.csv", header=TRUE, sep=",")
mlp <- read.delim("../data/ep7/mlp.csv", header=TRUE, sep=",")
uml<-read.delim("../data/ep7/uml.csv", header=TRUE, sep=",")
quest <- read_excel("../data/ep7/quest.xlsx")
# merge data set and remove NA
total <- rbind( apta,grabr,mlp,quest,siam,siud,uml)
total<- na.omit(total)
# set method to factor
total$method <-factor(total$method, levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# Modify the names of NC, FC, and MC
total$listener[total$listener == "NC"] <- "Non Concentrated"
total$listener[total$listener == "FC"] <- "Fully Concentrated"
total$listener[total$listener == "MC"] <- "Moderately Concentrated"
# Plot
bxp <- ggboxplot(
total , x = "method", y = "threshold",palette = "jco",
color = "listener",linetype="type",outlier.shape = NA,lwd=1
)+theme_classic()+ theme(text = element_text(size = 16))
bxp<-bxp+labs(y= "Threshold Estimates / dB")+ theme(legend.position="bottom")+ geom_hline(yintercept=15, linetype="longdash", color ='#e73550',lwd=1)
bxp<- bxp+scale_linetype_discrete(name = "type",labels= c("Long-term inattentive", "Short-term inattentive"))
bxp
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
threshold ~ method,  pool.sd = FALSE,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust x position
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
# Add statistical labels
bxp <-bxp + stat_pvalue_manual(stat.test, hide.ns = TRUE,y.position=25,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.01,tip.length = 0)+ theme(legend.position = "bottom",legend.box = "vertical")+ylim(10,70)
# Annotate number of simulation and number of trial
bxp <-bxp+ annotate("text",x =1, y = 55,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# disable xlab
bxp<-bxp+theme(axis.title.x=element_blank(),axis.ticks.x=element_blank())
bxp
jpeg("Plot3.jpeg", width = 900, height = 675, res = 300)
# Plot
bxp <- ggboxplot(
total , x = "method", y = "threshold",palette = "jco",
color = "listener",linetype="type",outlier.shape = NA,lwd=1
)+theme_classic()+ theme(text = element_text(size = 16))
bxp<-bxp+labs(y= "Threshold Estimates / dB")+ theme(legend.position="bottom")+ geom_hline(yintercept=15, linetype="longdash", color ='#e73550',lwd=1)
bxp<- bxp+scale_linetype_discrete(name = "type",labels= c("Long-term inattentive", "Short-term inattentive"))
bxp
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
threshold ~ method,  pool.sd = FALSE,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust x position
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
# Add statistical labels
bxp <-bxp + stat_pvalue_manual(stat.test, hide.ns = TRUE,y.position=25,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.01,tip.length = 0)+ theme(legend.position = "bottom",legend.box = "vertical")+ylim(10,70)
# Annotate number of simulation and number of trial
bxp <-bxp+ annotate("text",x =1, y = 55,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# disable xlab
bxp<-bxp+theme(axis.title.x=element_blank(),axis.ticks.x=element_blank())
bxp
dev.off()
jpeg("Plot3.jpeg", width = 900, height = 675, units='mm', res = 300)
# Plot
bxp <- ggboxplot(
total , x = "method", y = "threshold",palette = "jco",
color = "listener",linetype="type",outlier.shape = NA,lwd=1
)+theme_classic()+ theme(text = element_text(size = 16))
bxp<-bxp+labs(y= "Threshold Estimates / dB")+ theme(legend.position="bottom")+ geom_hline(yintercept=15, linetype="longdash", color ='#e73550',lwd=1)
bxp<- bxp+scale_linetype_discrete(name = "type",labels= c("Long-term inattentive", "Short-term inattentive"))
bxp
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
threshold ~ method,  pool.sd = FALSE,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust x position
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
# Add statistical labels
bxp <-bxp + stat_pvalue_manual(stat.test, hide.ns = TRUE,y.position=25,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.01,tip.length = 0)+ theme(legend.position = "bottom",legend.box = "vertical")+ylim(10,70)
# Annotate number of simulation and number of trial
bxp <-bxp+ annotate("text",x =1, y = 55,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# disable xlab
bxp<-bxp+theme(axis.title.x=element_blank(),axis.ticks.x=element_blank())
bxp
dev.off()
jpeg("Plot3.jpeg", width = 900, height = 675, units = "px", res = 300)
# Plot
bxp <- ggboxplot(
total , x = "method", y = "threshold",palette = "jco",
color = "listener",linetype="type",outlier.shape = NA,lwd=1
)+theme_classic()+ theme(text = element_text(size = 16))
bxp<-bxp+labs(y= "Threshold Estimates / dB")+ theme(legend.position="bottom")+ geom_hline(yintercept=15, linetype="longdash", color ='#e73550',lwd=1)
bxp<- bxp+scale_linetype_discrete(name = "type",labels= c("Long-term inattentive", "Short-term inattentive"))
bxp
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
threshold ~ method,  pool.sd = FALSE,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust x position
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
# Add statistical labels
bxp <-bxp + stat_pvalue_manual(stat.test, hide.ns = TRUE,y.position=25,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.01,tip.length = 0)+ theme(legend.position = "bottom",legend.box = "vertical")+ylim(10,70)
# Annotate number of simulation and number of trial
bxp <-bxp+ annotate("text",x =1, y = 55,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# disable xlab
bxp<-bxp+theme(axis.title.x=element_blank(),axis.ticks.x=element_blank())
bxp
dev.off()
# load library
library('ggplot2')
library(readr)
library("ggsci")
library(ggh4x)
library(dplyr)
# read data
data <- read.csv("../data/ep2/eff_data_5000.csv")
data$method <-as.factor(data$method)
# filter out grabr-o, and reorder the data
data <-data %>% filter(method!='GRaBr-O')
data$method <-factor(data$method,  levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# rename the NC, FC, and MC
data$listener[data$listener == "NC"] <- "Non Concentrated"
data$listener[data$listener == "FC"] <- "Fully Concentrated"
data$listener[data$listener == "MC"] <- "Moderately Concentrated"
# rename Long- and short-term
data$type[data$type == "L"] <- "Long-term inattentive"
data$type[data$type == "S"] <- "Short-term inattentive"
# start plot
p1<- ggplot(data, aes(x=N, y=std, group=method, color=method,shape=method))+ geom_point()+ facet_grid(rows = vars(type),cols = vars(listener))+labs(x="Number of Trials N", y = "Standard Deviation (error in dB)")+theme_classic()+ scale_color_npg()+ theme(legend.position="bottom")
p1<-p1+xlim(10,75) + geom_smooth(formula = y ~ 1/sqrt(x),se = FALSE)+ theme(legend.position = "bottom",
legend.box = "vertical")+ theme(text = element_text(size = 16))
p1<-p1 +
theme(panel.spacing = unit(.0, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))+geom_vline(xintercept=50,linetype=2)
p1
# load library
library('ggplot2')
library(readr)
library("ggsci")
library(ggh4x)
library(dplyr)
# read data
data <- read.csv("../data/ep2/eff_data_5000.csv")
data$method <-as.factor(data$method)
# filter out grabr-o, and reorder the data
data <-data %>% filter(method!='GRaBr-O')
data$method <-factor(data$method,  levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# rename the NC, FC, and MC
data$listener[data$listener == "NC"] <- "Non Concentrated"
data$listener[data$listener == "FC"] <- "Fully Concentrated"
data$listener[data$listener == "MC"] <- "Moderately Concentrated"
# rename Long- and short-term
data$type[data$type == "L"] <- "Long-term inattentive"
data$type[data$type == "S"] <- "Short-term inattentive"
# start plot
p1<- ggplot(data, aes(x=N, y=std, group=method, color=method,shape=method))+ geom_point()+ facet_grid(rows = vars(type),cols = vars(listener))+labs(x="Number of Trials N", y = "Standard Deviation (error in dB)")+theme_classic()+ scale_color_npg()+ theme(legend.position="bottom")
p1<-p1+xlim(10,75) + geom_smooth(formula = y ~ 1/sqrt(x),se = FALSE)+ theme(legend.position = "bottom",
legend.box = "vertical")+ theme(text = element_text(size = 16))
p1<-p1 +
theme(panel.spacing = unit(.0, "lines"),
panel.border = element_rect(color = "black", fill = NA, size = 1),
strip.background = element_rect(color = "black", size = 1))+geom_vline(xintercept=50,linetype=2)
p1
# load library
library(ggplot2)
library(ggsci)
library(ggpubr)
library(dplyr)
library(rstatix)
library(readxl)
# import data
apta <- read.delim("../data/ep7/apta.csv", header=TRUE, sep=",")
siam <-read.delim("../data/ep7/siam.csv", header=TRUE, sep=",")
siud <- read.delim("../data/ep7/siud.csv", header=TRUE, sep=",")
grabr <- read.delim("../data/ep7/GRaBr.csv", header=TRUE, sep=",")
mlp <- read.delim("../data/ep7/mlp.csv", header=TRUE, sep=",")
uml<-read.delim("../data/ep7/uml.csv", header=TRUE, sep=",")
quest <- read_excel("../data/ep7/quest.xlsx")
# merge data, and remove na value
total <- rbind(apta,grabr,mlp,quest,siam,siud,uml)
total <- na.omit(total)
# Modify the names of NC, FC, and MC
total$listener[total$listener == "NC"] <- "Non Concentrated"
total$listener[total$listener == "FC"] <- "Fully Concentrated"
total$listener[total$listener == "MC"] <- "Moderately Concentrated"
# calculate sweat factor
total =total %>% group_by(method,listener,type)  %>%
mutate(sf=case_when((method =='SIAM'| method =='APTA'| method =='MLP'|method =='QUEST+'|method=='UML') ~ 1/(var(threshold, na.rm=TRUE)*N*1.5),
(method =='SIUD'| method =='GRaBr') ~ 1/(var(threshold, na.rm=TRUE)*N*2.5)))
# calculate normalized efficiency
total=total %>% group_by(method,listener,type)  %>%
mutate(ne=sf*(1-sum(is.na(threshold))/1000))
# calculate ne summary
ne_summary <-total %>%
group_by(method,listener,type) %>%
summarise(
sd = sd(ne),
ne = mean(ne)
)
# reorder and rename NC, FC, and MC
ne_summary$method <-factor(ne_summary$method, levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# plot barplot of normalized efficiency
bp<-ggplot(data = ne_summary, aes(x = method, y=ne, color=listener,linetype = type)) +geom_bar(stat="identity",fill="white", position=position_dodge(),lwd=1)+scale_color_jco()
bp<-bp+geom_errorbar(aes(ymin=ne, ymax=ne+sd), width=.5,
position=position_dodge(0.9),lwd=1) + theme(text = element_text(size = 16))+ labs(y = "Normalised Efficiency")
bp<-bp+theme_classic() +theme(legend.position="bottom") + theme(text = element_text(size = 16))+scale_linetype_discrete(name = "type",labels= c("Long-term inattentive", "Short-term inattentive"))
bp<- bp+theme(legend.position = "bottom",
legend.box = "vertical")
bp
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
ne ~ method,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust bar
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
# add statistical label
bp<-bp+ stat_pvalue_manual(stat.test, y.position=0.035,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.05,tip.length = 0, hide.ns = TRUE)
# Annotate number of simulation and number of trial
bp+ annotate("text",x =5, y = 0.04,
label = c('Number of trials = 50\nNumber of simulations = 1000\n'),hjust = 0,size=4)
# load library
library(ggplot2)
library(ggsci)
library(ggpubr)
library(dplyr)
library(rstatix)
library(ggsignif)
library(readxl)
# read data
apta <- read.delim("../data/ep7/apta.csv", header=TRUE, sep=",")
siam <-read.delim("../data/ep7/siam.csv", header=TRUE, sep=",")
siud <- read.delim("../data/ep7/siud.csv", header=TRUE, sep=",")
grabr <- read.delim("../data/ep7/GRaBr.csv", header=TRUE, sep=",")
mlp <- read.delim("../data/ep7/mlp.csv", header=TRUE, sep=",")
uml<-read.delim("../data/ep7/uml.csv", header=TRUE, sep=",")
quest <- read_excel("../data/ep7/quest.xlsx")
# merge data set and remove NA
total <- rbind( apta,grabr,mlp,quest,siam,siud,uml)
total<- na.omit(total)
# set method to factor
total$method <-factor(total$method, levels = c("SIUD", "GRaBr","APTA",'QUEST+','UML','MLP',"SIAM"))
# Modify the names of NC, FC, and MC
total$listener[total$listener == "NC"] <- "Non Concentrated"
total$listener[total$listener == "FC"] <- "Fully Concentrated"
total$listener[total$listener == "MC"] <- "Moderately Concentrated"
# Plot
bxp <- ggboxplot(
total , x = "method", y = "threshold",palette = "jco",
color = "listener",linetype="type",outlier.shape = NA,lwd=1
)+theme_classic()+ theme(text = element_text(size = 16))
bxp<-bxp+labs(y= "Threshold Estimates / dB")+ theme(legend.position="bottom")+ geom_hline(yintercept=15, linetype="longdash", color ='#e73550',lwd=1)
bxp<- bxp+scale_linetype_discrete(name = "type",labels= c("Long-term inattentive", "Short-term inattentive"))
bxp
# Apply statistics
stat.test <- total %>%
group_by(type,listener) %>%
pairwise_t_test(
threshold ~ method,  pool.sd = FALSE,
p.adjust.method = "bonferroni"
)%>%filter(type=='S'& listener =="Non Concentrated")%>%add_xy_position(x = "method")
# Adjust x position
stat.test$xmin<-stat.test$xmin+0.35
stat.test$xmax<-stat.test$xmax+0.35
# Add statistical labels
bxp <-bxp + stat_pvalue_manual(stat.test, hide.ns = TRUE,y.position=25,color='listener',linetype ='type',label = "p.adj.signif",step.increase = 0.01,tip.length = 0)+ theme(legend.position = "bottom",legend.box = "vertical")+ylim(10,70)
# Annotate number of simulation and number of trial
bxp <-bxp+ annotate("text",x =1, y = 55,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15'),hjust = 0,size=4)
# Annotate number of simulation and number of trial
bxp <-bxp+ annotate("text",x =1, y = 55,
label = c('Number of trials = 50\nNumber of simulations = 1000\nTarget threshold = 15 dB'),hjust = 0,size=4)
# disable xlab
bxp<-bxp+theme(axis.title.x=element_blank(),axis.ticks.x=element_blank())
bxp
